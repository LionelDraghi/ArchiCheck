
all: check

.PHONY : clean

check: ../../Obj/archicheck clean

	> Readme.txt
	echo "Test Suite: Command line tests " 					>> Readme.txt
	echo "" 								>> Readme.txt
	echo "NB : this file is auto generated by the Makefile, do not modify!" >> Readme.txt
	echo "" 								>> Readme.txt
	echo "This test check that illegal command lines cause archicheck to"	>> Readme.txt
	echo "exit with a non null return code." 				>> Readme.txt
	echo "Note that normal use is overly tested in other tests," 		>> Readme.txt
	echo "so here mainly error situations are tested."			>> Readme.txt

	@ echo
	echo "" 							>> Readme.txt
	echo "Test: Help options" 					>> Readme.txt
	echo "Test that the -h, --help or no command line will put :" 	>> Readme.txt
	echo "(start code)" 						>> Readme.txt
	cat expected_help.txt 						>> Readme.txt
	echo "(end)" 							>> Readme.txt

	../../Obj/archicheck -h 			> help1.txt
	sdiff -s help1.txt expected_help.txt

	@ echo
	../../Obj/archicheck --help			> help2.txt
	sdiff -s help2.txt expected_help.txt

	@ echo
	../../Obj/archicheck  				> help3.txt
	sdiff -s help3.txt expected_help.txt

	@ echo
	echo "" 							>> Readme.txt
	echo "Test: Version options" 					>> Readme.txt
	echo "Test that the -v or --version will put :" 		>> Readme.txt
	echo "(start code)" 						>> Readme.txt
	cat expected_version.txt 					>> Readme.txt
	echo "(end)" 							>> Readme.txt
	../../Obj/archicheck -v 			> version1.txt
	../../Obj/archicheck --version			> version2.txt
	sdiff -s version1.txt expected_version.txt
	sdiff -s version2.txt expected_version.txt

	@ echo
	echo "" 							>> Readme.txt
	echo "Test: -I option without src dir" 				>> Readme.txt
	echo "(start code)" 						>> Readme.txt
	cat expected_err1.txt						>> Readme.txt
	echo "(end)" 							>> Readme.txt
	test ! `../../Obj/archicheck -I			> err1.txt  2>&1`
	sdiff -s expected_err1.txt err1.txt

	echo "" 							>> Readme.txt
	echo "Test: -I option with an unknow dir" 			>> Readme.txt
	echo "(start code)" 						>> Readme.txt
	cat expected_err2.txt						>> Readme.txt
	echo "(end)" 							>> Readme.txt
	@ echo
	test ! `../../Obj/archicheck -I qsdqjh		> err2.txt  2>&1`
	sdiff -s expected_err2.txt err2.txt

	echo "" 							>> Readme.txt
	echo "Test: unknown -xyz option" 				>> Readme.txt
	echo "(start code)" 						>> Readme.txt
	cat expected_err3.txt						>> Readme.txt
	echo "(end)" 							>> Readme.txt
	@ echo
	test ! `../../Obj/archicheck -xzy		> err3.txt  2>&1`
	sdiff -s expected_err3.txt err3.txt

	echo "" 							>> Readme.txt
	echo "Test: I option with... nothing do do" 			>> Readme.txt
	echo '      (no rules file, no -ld or -lf, etc.)' 		>> Readme.txt
	echo "(start code)" 						>> Readme.txt
	cat expected_err4.txt						>> Readme.txt
	echo "(end)" 							>> Readme.txt
	@ echo
	@ mkdir dir1
	test ! `../../Obj/archicheck -I dir1		> err4.txt 2>&1`
	sdiff -s expected_err4.txt err4.txt

	echo "" 							>> Readme.txt
	echo "Test: I option with... nothing do do and an unknown directory"	>> Readme.txt
	echo "(start code)" 						>> Readme.txt
	cat expected_err5.txt						>> Readme.txt
	echo "(end)" 							>> Readme.txt
	@ echo
	test ! `../../Obj/archicheck -I dir2		> err5.txt 2>&1`
	sdiff -s expected_err5.txt err5.txt

	echo "" 							>> Readme.txt
	echo "Test: -lc option without rules file" 			>> Readme.txt
	echo "(start code)" 						>> Readme.txt
	cat expected_err6.txt						>> Readme.txt
	echo "(end)" 							>> Readme.txt
	@ echo
	test ! `../../Obj/archicheck -lc -I dir1 	> err6.txt 2>&1`
	sdiff -s expected_err6.txt err6.txt

	echo "" 							>> Readme.txt
	echo 'Test: Legal line, but no src file in the given (existing) directory' >> Readme.txt
	echo "(start code)" 						>> Readme.txt
	cat expected_err7.txt						>> Readme.txt
	echo "(end)" 							>> Readme.txt
	@ echo
	test ! `../../Obj/archicheck -lf -I dir1 	> err7.txt 2>&1`
	sdiff -s expected_err7.txt err7.txt

	@ echo OK

clean:
	@ ${RM} -rf dir1 err?.txt help?.txt version?.txt
